.btn {
	&:link,
	&:visited {
		text-decoration: none;
		text-transform: uppercase;
		padding: 1.5rem 4rem;
		border-radius: 10rem;
		display: inline-block;
		transition: all 0.2s;
		position: relative;
		font-size: $default-font-size;
	}

	&:hover {
		transform: translateY(-3px);
		box-shadow: 0 1rem 2rem rgba($color-black, 0.2);

		&:after {
			transform: scalex(1.5) scaleY(1.5);
			/* for the fade out we play on the opacity */
			opacity: 0;
		}
	}

	&:active {
		transform: translateY(-1px);
		box-shadow: 0 0.3rem 1rem rgba($color-black, 0.2);
	}

	&--white {
		background-color: $color-white;
		color: $color-grey-dark;

		&:after {
			background-color: $color-white;
		}
	}

	/* pseudo element. the trick is to put almost the exact replica of the element and
put behind the original element */
	&::after {
		/* first thing we need to specify its content */
		content: "";
		display: inline-block;
		height: 100%;
		width: 100%;
		/* the&::after is like a child of & so when we say width 100%, means
	100% of btn element */
		border-radius: 100px;
		/* we use the position property to put it behind the button */
		position: absolute;
		top: 0;
		left: 0;
		z-index: -1;
		transition: all 0.4s;
	}

	/* to make the .btn::after white we have to use: */

	&--animated {
		animation: infrombottom 0.6s ease-out 0.75s;
		animation-fill-mode: backwards;
	}
}

.btn-text {
	&:link,
	&:visited {
		font-size: $default-font-size;
		color: $color-primary;
		text-decoration: none;
		display: inline-block;
		border-bottom: 1px solid $color-primary;
		padding: 3px;
		transition: all 0.2s;
	}

	&:hover {
		background-color: $color-primary-light;
		color: $color-white;
		box-shadow: 0 1rem 2rem rgba($color-black, 0.15);
		transform: translateY(-2px);
	}

	&:active {
		box-shadow: 0 0.5rem 1rem rgba($color-black, 0.15);
		transform: translateY(0);
	}
}
